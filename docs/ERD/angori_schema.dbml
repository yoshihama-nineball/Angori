## Angori ER図

Project angori {
  database_type: 'PostgreSQL'
  Note: '''
    Angori - ゴリラのアンガーマネジメントアプリ
    関係線の交差を最小化するための順序最適化
  '''
}

// ===============================
// 中央: Users（最初に配置）
// ===============================

Table users {
  id bigint [primary key]
  email varchar [not null, unique]
  encrypted_password varchar [not null]
  name varchar [not null]
  reset_password_token varchar
  reset_password_sent_at timestamp
  remember_created_at timestamp
  created_at timestamp [not null]
  updated_at timestamp [not null]
  
  Note: '👤 ユーザー情報（中央）'
  
  Indexes {
    email [unique]
  }
}

// ===============================
// 左側: 1対1関係（usersの隣に配置）
// ===============================

Table calming_points {
  id bigint [primary key]
  user_id bigint [not null, unique]
  total_points integer [default: 0]
  current_level integer [default: 1]
  streak_days integer [default: 0]
  last_action_date date
  level_achievements jsonb
  milestone_flags jsonb
  created_at timestamp [not null]
  updated_at timestamp [not null]
  
  Note: '🍌 ゲーミフィケーション（左側）'
  
  Indexes {
    user_id [unique]
    current_level
  }
}

// ===============================
// 上側: メインデータ入力
// ===============================

Table anger_logs {
  id bigint [primary key]
  user_id bigint [not null]
  anger_level integer [not null]
  situation text [not null]
  trigger_description text
  location varchar
  physical_reactions text
  occurred_at timestamp [not null]
  duration_minutes integer
  coping_method text
  reflection text
  created_at timestamp [not null]
  updated_at timestamp [not null]
  
  Note: '😡 アンガーログ（上側）'
  
  Indexes {
    user_id
    occurred_at
    (user_id, occurred_at)
    anger_level
  }
}

// ===============================
// 右側: AI処理系（連鎖配置）
// ===============================

Table consultations {
  id bigint [primary key]
  user_id bigint [not null]
  anger_log_id bigint
  conversation_data jsonb [not null]
  ai_model varchar [default: 'gpt-4o-mini']
  session_status varchar [default: 'active']
  total_tokens_used integer [default: 0]
  started_at timestamp [not null]
  completed_at timestamp
  created_at timestamp [not null]
  updated_at timestamp [not null]
  
  Note: '💬 AI相談（右上）'
  
  Indexes {
    user_id
    anger_log_id
    started_at
    session_status
  }
}

Table ai_advices {
  id bigint [primary key]
  consultation_id bigint [not null]
  advice_content text [not null]
  advice_type varchar
  confidence_score float
  created_at timestamp [not null]
  updated_at timestamp [not null]
  
  Note: '🤖 AIアドバイス（右下）'
  
  Indexes {
    consultation_id
    advice_type
  }
}

// ===============================
// 下側: 分析系（最後に配置）
// ===============================

Table trigger_words {
  id bigint [primary key]
  user_id bigint [not null]
  name varchar [not null]
  count integer [default: 1]
  anger_level_avg float
  category varchar
  last_triggered_at timestamp
  created_at timestamp [not null]
  updated_at timestamp [not null]
  
  Note: '⚡ トリガー分析（下左）'
  
  Indexes {
    (user_id, count)
    (user_id, name) [unique]
    category
  }
}

Table analytics {
  id bigint [primary key]
  user_id bigint [not null]
  analysis_type varchar [not null]
  analysis_date date [not null]
  data jsonb [not null]
  created_at timestamp [not null]
  updated_at timestamp [not null]
  
  Note: '📊 高度分析（下右）'
  
  Indexes {
    (user_id, analysis_type, analysis_date) [unique]
  }
}

// ===============================
// 関係性定義（重要度順・線交差最小化）
// ===============================

// 🔥 最重要：1対1関係（左側の短い線）
Ref: users.id - calming_points.user_id [delete: cascade]

// 📊 基本：users中心の放射状関係
Ref: users.id < anger_logs.user_id [delete: cascade]
Ref: users.id < consultations.user_id [delete: cascade]
Ref: users.id < trigger_words.user_id [delete: cascade]
Ref: users.id < analytics.user_id [delete: cascade]

// 🤖 AI処理：右側の縦方向連鎖
Ref: consultations.id < ai_advices.consultation_id [delete: cascade]

// 🔗 オプション：上右への斜め線
Ref: anger_logs.id < consultations.anger_log_id [delete: set null]

// ===============================
// テーブルグループ（配置ヒント）
// ===============================

TableGroup "Core System" {
  users
  calming_points
}

TableGroup "Data Collection" {
  anger_logs
}

TableGroup "AI Processing" {
  consultations
  ai_advices
}

TableGroup "Analytics" {
  trigger_words
  analytics
}