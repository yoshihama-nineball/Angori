# ヘルスチェック（緩和版）
  verify:
    runs-on: ubuntu-latest
    needs: [setup, deploy-frontend, deploy-backend]

    steps:
    - name: Health check
      run: |
        if [[ "${{ needs.setup.outputs.is-production }}" == "true" ]]; then
          BACKEND_URL="https://angori.onrender.com"
          FRONTEND_URL="https://angori.vercel.app"
          echo "Checking Production environment"
          STRICT_CHECK=true  # 本番環境は厳格にチェック
        else
          BACKEND_URL="https://angori-api-development.onrender.com"
          FRONTEND_URL="https://angori-dev.vercel.app"
          echo "Checking Development environment"
          STRICT_CHECK=false  # 開発環境は緩やかにチェック
        fi

        echo "Backend URL: $BACKEND_URL"
        echo "Frontend URL: $FRONTEND_URL"
        
        # Wait for services to restart
        echo "Waiting for services to restart..."
        sleep 90
        
        # Backend health check
        echo "🔍 Starting backend health check..."
        max_attempts=5  # 開発環境は少ない試行回数
        attempt=1
        backend_healthy=false
        
        while [ $attempt -le $max_attempts ]; do
          echo "Backend health check attempt $attempt/$max_attempts"
          
          # 複数のエンドポイントを試す
          if curl -f -s --max-time 30 "$BACKEND_URL/health" > /dev/null 2>&1; then
            echo "✅ Backend health check passed via /health!"
            backend_healthy=true
            break
          elif curl -f -s --max-time 30 "$BACKEND_URL/up" > /dev/null 2>&1; then
            echo "✅ Backend health check passed via /up!"
            backend_healthy=true
            break
          elif curl -f -s --max-time 30 "$BACKEND_URL/" > /dev/null 2>&1; then
            echo "✅ Backend health check passed via root!"
            backend_healthy=true
            break
          else
            echo "❌ Backend health check failed, attempt $attempt/$max_attempts"
            
            # デバッグ情報を出力
            echo "Response from $BACKEND_URL:"
            curl -s -w "HTTP Status: %{http_code}\n" "$BACKEND_URL/health" || echo "Connection failed"
            
            if [ $attempt -eq $max_attempts ]; then
              if [[ "$STRICT_CHECK" == "true" ]]; then
                echo "❌ Production backend health check failed - CRITICAL!"
                exit 1
              else
                echo "⚠️  Development backend health check failed - continuing anyway"
                echo "Check Render dashboard manually: https://dashboard.render.com"
              fi
            fi
            sleep 30
            ((attempt++))
          fi
        done

        # Frontend health check
        echo "🔍 Starting frontend health check..."
        if curl -f -s --max-time 30 "$FRONTEND_URL" > /dev/null 2>&1; then
          echo "✅ Frontend health check passed!"
        else
          echo "❌ Frontend health check failed"
          if [[ "$STRICT_CHECK" == "true" ]]; then
            echo "❌ Production frontend health check failed - CRITICAL!"
            exit 1
          else
            echo "⚠️  Development frontend might still be deploying"
          fi
        fi

        echo "🎉 Deployment verification completed!"
        
        # サマリー表示
        if [[ "$STRICT_CHECK" == "true" ]]; then
          echo "✅ Production deployment verified successfully"
        else
          echo "⚠️  Development deployment completed (some checks may have failed)"
          echo "💡 Manual verification recommended for development environment"
        fi