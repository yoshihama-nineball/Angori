name: Deploy

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main, develop]

jobs:
  # デプロイ準備
  setup:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    outputs:
      environment: ${{ steps.env.outputs.environment }}
      target-branch: ${{ steps.env.outputs.target-branch }}

    steps:
    - id: env
      run: |
        TARGET_BRANCH="${{ github.event.workflow_run.head_branch }}"
        echo "target-branch=$TARGET_BRANCH" >> $GITHUB_OUTPUT
        echo "Target branch: $TARGET_BRANCH"
        
        if [[ "$TARGET_BRANCH" == "main" ]]; then
          echo "environment=Production" >> $GITHUB_OUTPUT
          echo "Using Production environment for main branch"
        else
          echo "environment=Preview" >> $GITHUB_OUTPUT
          echo "Using Preview environment for $TARGET_BRANCH branch"
        fi

  # フロントエンドデプロイ (Vercel)
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: setup
    environment: ${{ needs.setup.outputs.environment }}

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock

    - name: Install dependencies
      working-directory: frontend
      run: yarn install --frozen-lockfile

    - uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: ${{ needs.setup.outputs.environment == 'production' && '--prod' || '' }}

  # バックエンドデプロイ (Render)
  deploy-backend:
    runs-on: ubuntu-latest
    needs: setup
    environment: ${{ needs.setup.outputs.environment }}

    steps:
    - name: Deploy to Render
      run: |
        if [[ "${{ needs.setup.outputs.environment }}" == "production" ]]; then
          SERVICE_ID="${{ secrets.RENDER_SERVICE_ID_PROD }}"
        else
          SERVICE_ID="${{ secrets.RENDER_SERVICE_ID_DEVELOPMENT }}"
        fi

        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          "https://api.render.com/v1/services/$SERVICE_ID/deploys"

  # ヘルスチェック
  verify:
    runs-on: ubuntu-latest
    needs: [setup, deploy-frontend, deploy-backend]

    steps:
    - name: Health check
      run: |
        if [[ "${{ needs.setup.outputs.environment }}" == "production" ]]; then
          BACKEND_URL="https://angori.onrender.com"
        else
          BACKEND_URL="https://angori-development.onrender.com"
        fi

        # Wait longer for Render service to restart
        echo "Waiting for service to restart..."
        sleep 120
        
        # Try multiple endpoints
        echo "Testing health endpoints..."
        curl -f "$BACKEND_URL/up" || curl -f "$BACKEND_URL/health" || curl -f "$BACKEND_URL/"